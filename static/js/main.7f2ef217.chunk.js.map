{"version":3,"sources":["store/warehouses/actionTypes.js","api/warehouses.js","api/products.js","store/products/actionTypes.js","store/products/actions.js","store/warehouses/actions.js","components/Loader/index.jsx","components/SelectElement.jsx","components/ProductsMoveElement.jsx","store/warehouses/reducer.js","components/ProductsMoveList.jsx","components/ProductsDistributionElement.jsx","components/ProductsDistributionList.jsx","components/WarehouseModal.jsx","components/WarehousesList.jsx","components/WarehousesDistributionElement.jsx","components/WarehousesDistributionList.jsx","components/ProductModal.jsx","components/ProductsList.jsx","store/products/reducer.js","store/index.js","App.jsx","serviceWorker.js","index.js"],"names":["SET_SELECTED_ITEM","SET_SELECTED_LOADING","SET_SELECTED_ERROR","SET_SELECTED_PRODUCTS_ITEMS","SET_SELECTED_PRODUCTS_FOR_MOVE","SET_SELECTED_PRODUCTS_FOR_DELETE","SET_SELECTED_PRODUCTS_ERROR","SET_SELECTED_PRODUCTS_LOADING","SET_LIST_ITEMS","SET_LIST_LOADING","SET_LIST_ERROR","SET_LIST_PAGE","SET_LIST_TOTAL_COUNT","apiUrl","process","fetchWarehousesList","a","page","limit","searchString","axios","get","response","items","data","totalCount","headers","fetchWarehousesListByProduct","productId","createWarehouse","title","productsDistributions","productsQuantity","reduce","sum","productDistributions","quantity","post","productsDistribution","warehouseId","id","product","editWarehouse","productsForDelete","productsForMove","put","isNew","edited","delete","productForMove","warehousesDistributions","warehouseDistributions","warehouse","responseWarehousesProducts","length","productForDelete","removeWarehouse","fetchAllProductsList","fetchProductsListByWarehouse","createProduct","freeQuantity","warehousesDistribution","editProduct","warehousesForDelete","warehouseForDelete","removeProduct","SET_SELECTED_WAREHOUSES_FOR_DELETE","SET_SELECTED_WAREHOUSES_ITEMS","SET_SELECTED_WAREHOUSES_ERROR","SET_SELECTED_WAREHOUSES_LOADING","fetchProducts","dispatch","getState","products","list","pagination","loading","type","types","error","productsApi","fetchWarehousesBySelectedProduct","state","warehousesApi","selected","item","warehouses","clearSelectedProduct","start","saveProduct","withoutUpdateWarehouses","findIndex","warehouseItem","Error","editProductIndexInArray","push","updateWarehouses","reloadProuduct","editWarehouseForProduct","selectedProduct","addProductForDelete","skipEdited","warehousesActions","firstWarehouse","fetchWarehouses","fetchProductsBySelectedWarehouses","clearSelectedWarehouse","productItem","newWarehouse","updateProducts","editWarehouseIndexInArray","updateWarehousesByMove","reloadWarehouse","editProductForMove","indexOfProductDistributions","calcProductForMoveQuantity","removeProductDistributionsFromMove","splice","editProductForWarehouse","productsActions","firstProduct","indexOfEditedWarehouse","Loader","full","className","style","position","SelectElement","props","disabled","backgroundColor","top","bottom","left","right","borderRadius","ProductsMoveElement","warehousesSelectPagination","count","prevProps","this","resetOptions","warehouseOption","productForMoveItem","value","console","warn","indexOfWarehousesDistributions","indexOf","setState","options","map","label","hasMore","filter","option","selectedWarehouse","find","prevOptions","loadedOptions","filterOptionsBySelected","Form","Row","Col","sm","cacheUniq","reduceOptions","loadOptions","onChange","e","onChangeWarehouse","Control","required","placeholder","min","onChangeQuantity","target","Button","block","variant","onClick","onClickRemove","Component","connect","initialState","action","actionTypes","getWarehousesDistributionsByProductDistributions","store","ProductsMoveList","newWarehouseDistributions","uuid","Array","isArray","key","onClickAddProductsMove","ownProps","warehousesSelectors","ProductsDistributionElement","productsSelectPagination","showMove","productOption","warehouseProducts","onlyMove","reduceSelectOptions","onChangeProduct","InputGroup","FormControl","aria-describedby","Append","Text","ButtonGroup","onClickMove","active","ProductsDistributionList","selectedWarehouseProductsError","Alert","message","selectedWarehouseProducts","selectedWarehouseProductsLoading","onClickAddProductDistribution","WarehouseModal","showBeforeRemoveModal","showMoveBeforeRemoveModal","event","preventDefault","selectedError","onWarehouseClose","onClose","onClickRemoveWarehouse","Modal","show","onHide","onShow","featchWarehouseProducts","onSubmit","onClickWarehouseSave","Header","closeButton","Title","Body","selectedLoading","Group","Label","Footer","onShowBeforeRemoveModal","onShowMoveBeforeRemoveModal","onClickRemoveWarehouseWithMove","WarehousesList","showWarehouseModal","scrollContainer","wrehousesAction","scrollHeight","clientHeight","listItems","listTotalCount","wrehousesActionTypes","element","scrollTop","justifyContent","display","listError","onScroll","onScrollList","ref","Table","striped","bordered","hover","onClickWarehouse","listLoading","selectedItem","WarehousesDistributionElement","productsWarehouse","indexOfWarehouseDistributions","WarehousesDistributionList","productWarehouse","selectedProductWarehouses","selectedProductWarehousesError","selectedProductWarehousesLoading","onClickAddWarehousesDistribution","ProductModal","onProductClose","featchProductWarehouses","onClickProductSave","warehousesDistributionsToDelete","onChangeQuantitySum","quantitySum","minQuantity","onClickRemoveProduct","ProductsList","showProductModal","productsActionTypes","onClickAddProduct","onClickProduct","createStore","combineReducers","reducers","composeWithDevTools","applyMiddleware","thunk","App","Container","xs","md","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f2ef217.chunk.js","sourcesContent":["export const SET_SELECTED_ITEM = \"warehouses.SET_SELECTED_ITEM\";\nexport const SET_SELECTED_LOADING = \"warehouses.SET_SELECTED_LOADING\";\nexport const SET_SELECTED_ERROR = \"warehouses.SET_SELECTED_ERROR\";\nexport const SET_SELECTED_PRODUCTS_ITEMS = \"warehouses.SET_SELECTED_PRODUCTS_ITEMS\";\n\nexport const SET_SELECTED_PRODUCTS_FOR_MOVE = \"warehouses.SET_SELECTED_PRODUCTS_FOR_MOVE\";\nexport const SET_SELECTED_PRODUCTS_FOR_DELETE = \"warehouses.SET_SELECTED_PRODUCTS_FOR_DELETE\";\n\nexport const SET_SELECTED_PRODUCTS_ERROR = \"warehouses.SET_SELECTED_PRODUCTS_ERROR\";\nexport const SET_SELECTED_PRODUCTS_LOADING = \"warehouses.SET_SELECTED_PRODUCTS_LOADING\";\n\nexport const SET_LIST_ITEMS = \"warehouses.SET_LIST_ITEMS\";\nexport const SET_LIST_LOADING = \"warehouses.SET_LIST_LOADING\";\nexport const SET_LIST_ERROR = \"warehouses.SET_LIST_ERROR\";\nexport const SET_LIST_PAGE = \"warehouses.SET_LIST_PAGE\";\nexport const SET_LIST_TOTAL_COUNT = \"warehouses.SET_LIST_TOTAL_COUNT\";","import axios from \"axios\";\n\nconst apiUrl = process.env.REACT_APP_API_HOST;\n\nexport async function fetchWarehousesList({ page, limit, searchString = \"\" }) {\n  try {\n    const response = await axios.get(`${apiUrl}/warehouses?_page=${page}&_limit=${limit}&title_like=${searchString}`);\n\n    return {\n      items: response.data,\n      totalCount: response.headers[\"x-total-count\"]\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchWarehousesListByProduct({ productId } = {}) {\n  try {\n    const response = await axios.get(`${apiUrl}/products/${productId}/warehousesProducts?_expand=warehouse`);\n\n    return response.data\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function createWarehouse({ title, productsDistributions }) {\n  try {\n    const productsQuantity = productsDistributions.reduce((sum, productDistributions) => sum + productDistributions.quantity, 0);\n    const response = await axios.post(`${apiUrl}/warehouses`, { title, productsQuantity });\n\n    for (let productsDistribution of productsDistributions) {\n      if (productsDistribution.quantity > 0) {\n        await axios.post(`${apiUrl}/warehousesProducts`, {\n          warehouseId: response.data.id,\n          productId: productsDistribution.product.id,\n          quantity: productsDistribution.quantity\n        });\n      }\n    }\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function editWarehouse({ id, title, productsDistributions = [], productsForDelete = [], productsForMove = []}) {\n  try {\n    const productsQuantity = productsDistributions.reduce((sum, productDistributions) => sum + productDistributions.quantity, 0);    \n    const response = await axios.put(`${apiUrl}/warehouses/${id}`, { title, productsQuantity });\n\n    for (let productsDistribution of productsDistributions) {\n      if (productsDistribution.isNew && productsDistribution.quantity > 0) {\n        await axios.post(`${apiUrl}/warehousesProducts`, {\n          warehouseId: response.data.id,\n          productId: productsDistribution.product.id,\n          quantity: productsDistribution.quantity\n        });\n      } else {\n        if (productsDistribution.edited && !productsDistribution.isNew) {\n          if (productsDistribution.quantity > 0) {\n            await axios.put(`${apiUrl}/warehousesProducts/${productsDistribution.id}`, {\n              warehouseId: response.data.id,\n              productId: productsDistribution.product.id,\n              quantity: productsDistribution.quantity\n            });\n          } else {\n            await axios.delete(`${apiUrl}/warehousesProducts/${productsDistribution.id}`);\n          }\n        }\n      }\n    }\n\n    for (let productForMove of productsForMove) {\n      for (let warehouseDistributions of productForMove.warehousesDistributions) {\n        if (warehouseDistributions.quantity > 0) {\n          const responseWarehousesProducts = await axios.get(`${apiUrl}/warehousesProducts?productId=${productForMove.productDistributions.product.id}&warehouseId=${warehouseDistributions.warehouse.id}`);\n          \n          if (responseWarehousesProducts.data.length) {\n            await axios.put(`${apiUrl}/warehousesProducts/${responseWarehousesProducts.data[0].id}`, {\n              warehouseId: warehouseDistributions.warehouse.id,\n              productId: productForMove.productDistributions.product.id,\n              quantity: responseWarehousesProducts.data[0].quantity + warehouseDistributions.quantity\n            });\n          } else {\n            await axios.post(`${apiUrl}/warehousesProducts`, {\n              warehouseId: warehouseDistributions.warehouse.id,\n              productId: productForMove.productDistributions.product.id,\n              quantity: warehouseDistributions.quantity\n            });\n          }\n        }\n      }\n    }\n\n    for (const productForDelete of productsForDelete) {\n      await axios.delete(`${apiUrl}/warehousesProducts/${productForDelete.id}`);\n    }\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function removeWarehouse(warehouse) {\n  try {\n    const response = await axios.delete(`${apiUrl}/warehouses/${warehouse.id}`);\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import axios from \"axios\";\n\nconst apiUrl = process.env.REACT_APP_API_HOST;\n\nexport async function fetchAllProductsList({ page, limit, searchString=\"\" } = {}) {\n  try {\n    const response = await axios.get(`${apiUrl}/products?_page=${page}&_limit=${limit}&title_like=${searchString}`);\n\n    return { \n      items: response.data,\n      totalCount: response.headers[\"x-total-count\"]\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchProductsListByWarehouse({ warehouseId } = {}) {\n  try {\n    const response = await axios.get(`${apiUrl}/warehouses/${warehouseId}/warehousesProducts?_expand=product`);\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function createProduct({ title, quantity, warehousesDistributions }) {\n  try {\n    const freeQuantity = quantity - warehousesDistributions.reduce((sum, warehouseDistributions) => sum + warehouseDistributions.quantity, 0);\n    const response = await axios.post(`${apiUrl}/products`, { title, quantity, freeQuantity });\n\n    for (let warehousesDistribution of warehousesDistributions) {\n      if (warehousesDistribution.quantity > 0) {\n        await axios.post(`${apiUrl}/warehousesProducts`, {\n          warehouseId: warehousesDistribution.warehouse.id,\n          productId: response.data.id,\n          quantity: warehousesDistribution.quantity\n        });\n      }\n    }\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function editProduct({ id, title, quantity, warehousesDistributions, warehousesForDelete }) {\n  try {\n    const freeQuantity = quantity - warehousesDistributions.reduce((sum, warehouseDistributions) => sum + warehouseDistributions.quantity, 0);\n    const response = await axios.put(`${apiUrl}/products/${id}`, { title, quantity, freeQuantity });\n\n    for (let warehousesDistribution of warehousesDistributions) {\n      if (warehousesDistribution.isNew && warehousesDistribution.quantity > 0) {\n        await axios.post(`${apiUrl}/warehousesProducts`, {\n          warehouseId: warehousesDistribution.warehouse.id,\n          productId: id,\n          quantity: warehousesDistribution.quantity\n        });\n      } else {\n        if (warehousesDistribution.edited && !warehousesDistribution.isNew) {\n          if (warehousesDistribution.quantity > 0) {\n            await axios.put(`${apiUrl}/warehousesProducts/${warehousesDistribution.id}`, {\n              warehouseId: warehousesDistribution.warehouse.id,\n              productId: id,\n              quantity: warehousesDistribution.quantity\n            });\n          } else {\n            await axios.delete(`${apiUrl}/warehousesProducts/${warehousesDistribution.id}`);\n          }\n        }\n      }\n    }\n\n    for (const warehouseForDelete of warehousesForDelete) {\n      await axios.delete(`${apiUrl}/warehousesProducts/${warehouseForDelete.id}`);\n    }\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function removeProduct(product) {\n  try {\n    const response = await axios.delete(`${apiUrl}/products/${product.id}`);\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n","export const SET_SELECTED_ITEM = \"products.SET_SELECTED_ITEM\";\nexport const SET_SELECTED_LOADING = \"products.SET_SELECTED_LOADING\";\nexport const SET_SELECTED_ERROR = \"products.SET_SELECTED_ERROR\";\n\nexport const SET_SELECTED_WAREHOUSES_FOR_DELETE = \"products.SET_SELECTED_WAREHOUSES_FOR_DELETE\";\n\nexport const SET_SELECTED_WAREHOUSES_ITEMS = \"products.SET_SELECTED_WAREHOUSES_ITEMS\";\nexport const SET_SELECTED_WAREHOUSES_ERROR = \"products.SET_SELECTED_WAREHOUSES_ERROR\";\nexport const SET_SELECTED_WAREHOUSES_LOADING = \"products.SET_SELECTED_WAREHOUSES_LOADING\";\n\nexport const SET_LIST_ITEMS = \"products.SET_LIST_ITEMS\";\nexport const SET_LIST_LOADING = \"products.SET_LIST_LOADING\";\nexport const SET_LIST_ERROR = \"products.SET_LIST_ERROR\";\nexport const SET_LIST_PAGE = \"products.SET_LIST_PAGE\";\nexport const SET_LIST_TOTAL_COUNT = \"products.SET_LIST_TOTAL_COUNT\";","import uuid from \"uuid/v4\";\nimport * as types from \"./actionTypes\";\nimport * as productsApi from \"../../api/products\";\nimport * as warehousesApi from \"../../api/warehouses\";\nimport * as warehousesActions from \"../warehouses/actions\";\n\nexport function fetchProducts() {\n  return async (dispatch, getState) => {\n    try {\n      if (getState().products.list.pagination.loading || (getState().products.list.pagination.totalCount !== 0 && getState().products.list.pagination.totalCount <= getState().products.list.items.length)) return;\n\n      dispatch({ type: types.SET_LIST_ERROR, error: null });\n      dispatch({ type: types.SET_LIST_LOADING, loading: true });\n\n      const products = await productsApi.fetchAllProductsList({\n        page: getState().products.list.pagination.page,\n        limit: getState().products.list.pagination.limit\n      });\n\n      dispatch({ type: types.SET_LIST_ITEMS, items: [...getState().products.list.items, ...products.items] });\n      dispatch({ type: types.SET_LIST_PAGE, page: getState().products.list.pagination.page + 1 });\n      dispatch({ type: types.SET_LIST_TOTAL_COUNT, totalCount: products.totalCount });\n      dispatch({ type: types.SET_LIST_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_LIST_ERROR, error });\n      dispatch({ type: types.SET_LIST_LOADING, loading: false });\n    }\n  };\n}\n\nexport function fetchWarehousesBySelectedProduct() {\n  return async (dispatch, getState) => {\n    try {\n      const state = getState();\n\n      dispatch({ type: types.SET_SELECTED_WAREHOUSES_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_WAREHOUSES_LOADING, loading: true });\n\n      const warehouses = await warehousesApi.fetchWarehousesListByProduct({ productId: state.products.selected.item.id });\n\n      dispatch({ type: types.SET_SELECTED_WAREHOUSES_ITEMS, items: [...state.products.selected.warehouses.items, ...warehouses] });\n      dispatch({ type: types.SET_SELECTED_WAREHOUSES_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_WAREHOUSES_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_WAREHOUSES_LOADING, loading: false });\n    }\n  };\n}\n\nexport function clearProducts() {\n  return dispatch => {\n    dispatch({ type: types.SET_LIST_ITEMS, items: [] });\n    dispatch({ type: types.SET_SELECTED_WAREHOUSES_ITEMS, items: [] });\n  };\n}\n\nexport function clearSelectedProduct() {\n  return dispatch => {\n    dispatch({ type: types.SET_SELECTED_ITEM, product: {} });\n    dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n    dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    dispatch({ type: types.SET_SELECTED_WAREHOUSES_ITEMS, items: [] });\n    dispatch({ type: types.SET_SELECTED_WAREHOUSES_ERROR, error: null });\n    dispatch({ type: types.SET_SELECTED_WAREHOUSES_LOADING, loading: false });\n    dispatch({ type: types.SET_SELECTED_WAREHOUSES_FOR_DELETE, warehousesForDelete: [] });\n  };\n}\n\nexport function editProduct({ title, quantity }) {\n  return async (dispatch, getState) => {\n    const product = {};\n\n    if (title) product[\"title\"] = title;\n    if (quantity >= 0) {\n      product[\"quantity\"] = quantity;\n      product[\"freeQuantity\"] = quantity - getState().products.selected.warehouses.items.reduce((start, warehouse) => start + warehouse.quantity, 0);\n    }\n\n    dispatch({ type: types.SET_SELECTED_ITEM, product: { ...getState().products.selected.item, ...product } });\n  };\n}\n\nexport function saveProduct(withoutUpdateWarehouses) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: true });\n\n      if (getState().products.selected.warehouses.items.findIndex(warehouseItem => !warehouseItem.warehouse) !== -1) throw new Error(\"Not all warehouse are selected, check the fields\");\n\n      const id = getState().products.selected.item.id;\n      const items = getState().products.list.items;\n\n      let product;\n\n      if (id) {\n        const editProductIndexInArray = items.findIndex(item => item.id === id);\n\n        product = await productsApi.editProduct({\n          ...getState().products.selected.item,\n          warehousesDistributions: getState().products.selected.warehouses.items,\n          warehousesForDelete: getState().products.selected.warehousesForDelete\n        });\n\n        if (editProductIndexInArray !== -1) items[editProductIndexInArray] = product;\n      } else {\n        product = await productsApi.createProduct({\n          ...getState().products.selected.item,\n          warehousesDistributions: getState().products.selected.warehouses.items,\n          warehousesForDelete: getState().products.selected.warehousesForDelete\n        });\n\n        if (getState().products.list.pagination.totalCount === getState().products.list.items.length) {\n          items.push(product);\n          dispatch({ type: types.SET_LIST_TOTAL_COUNT, totalCount: getState().products.list.pagination.totalCount + 1 });\n        }\n      }\n\n      if (!withoutUpdateWarehouses) await dispatch(updateWarehouses({ warehousesDistributions: getState().products.selected.warehouses.items }));\n\n      dispatch({ type: types.SET_LIST_ITEMS, items: [...items] });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    }\n  };\n}\n\nexport function removeProduct() {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: true });\n\n      await productsApi.removeProduct(getState().products.selected.item);\n      await dispatch(updateWarehouses({ warehousesDistributions: getState().products.selected.warehouses.items, skipEdited: true }));\n\n      dispatch({ type: types.SET_LIST_TOTAL_COUNT, totalCount: getState().products.list.pagination.totalCount - 1 });\n      dispatch({ type: types.SET_LIST_ITEMS, items: [...getState().products.list.items.filter(item => item.id !== getState().products.selected.item.id)] });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    }\n  };\n}\n\nexport function reloadProuduct(product) {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.SET_SELECTED_ITEM, product });\n    await dispatch(fetchWarehousesBySelectedProduct());\n    await dispatch(saveProduct(true));\n    dispatch(clearSelectedProduct());\n  };\n}\n\nexport function addWarehouseForProduct() {\n  return async (dispatch, getState) => {\n    const productWarehouse = getState().products.selected.warehouses.items;\n\n    productWarehouse.push({\n      id: uuid(),\n      warehouse: null,\n      quantity: 0,\n      isNew: true\n    });\n\n    dispatch({\n      type: types.SET_SELECTED_WAREHOUSES_ITEMS,\n      items: [...productWarehouse]\n    });\n  };\n}\n\nexport function editWarehouseForProduct({ warehouseDistributions, warehouse, quantity }) {\n  return async (dispatch, getState) => {\n    const selectedProduct = getState().products.selected.item;\n\n    if (warehouse) {\n      if (!warehouseDistributions[\"firstWarehouse\"]) warehouseDistributions[\"firstWarehouse\"] = warehouseDistributions.warehouse;\n\n      warehouseDistributions.warehouse = warehouse;\n    }\n    if (quantity >= 0 && selectedProduct[\"freeQuantity\"] + warehouseDistributions.quantity >= quantity) {\n      warehouseDistributions.quantity = quantity;\n      selectedProduct[\"freeQuantity\"] = selectedProduct.quantity - getState().products.selected.warehouses.items.reduce((start, warehouse) => start + warehouse.quantity, 0);\n    }\n\n    warehouseDistributions[\"edited\"] = true;\n\n    dispatch({\n      type: types.SET_SELECTED_WAREHOUSES_ITEMS,\n      items: [...getState().products.selected.warehouses.items]\n    });\n    dispatch({\n      type: types.SET_SELECTED_ITEM,\n      product: { ...getState().products.selected.item }\n    });\n  };\n}\n\nexport function removeWarehouseFromProduct(warehouseDistributions) {\n  return async (dispatch, getState) => {\n    const productsWarehouse = getState().products.selected.warehouses.items;\n    const indexOfWarehouseDistributions = productsWarehouse.indexOf(warehouseDistributions);\n    const selectedProduct = getState().products.selected.item;\n\n    if (indexOfWarehouseDistributions === -1) return console.warn(\"No found warehouseDistributions for remove\");\n\n    selectedProduct[\"freeQuantity\"] += productsWarehouse[indexOfWarehouseDistributions].quantity;\n    productsWarehouse.splice(indexOfWarehouseDistributions, 1);\n\n    dispatch(addProductForDelete(warehouseDistributions));\n    dispatch({\n      type: types.SET_SELECTED_WAREHOUSES_ITEMS,\n      items: [...productsWarehouse]\n    });\n    dispatch({\n      type: types.SET_SELECTED_ITEM,\n      product: { ...getState().products.selected.item }\n    });\n  };\n}\n\nexport function addProductForDelete(warehouseDistributions) {\n  return async (dispatch, getState) => {\n    if (!warehouseDistributions.isNew) {\n      const warehousesForDelete = getState().products.selected.warehousesForDelete;\n\n      warehousesForDelete.push(warehouseDistributions);\n\n      dispatch({\n        type: types.SET_SELECTED_WAREHOUSES_FOR_DELETE,\n        warehousesForDelete: [...warehousesForDelete]\n      });\n    }\n  };\n}\n\nexport function updateWarehouses({ warehousesDistributions, skipEdited }) {\n  return async (dispatch, getState) => {\n    for (let warehouseDistributions of warehousesDistributions) {\n      if (warehouseDistributions.edited || skipEdited) {\n        await dispatch(warehousesActions.reloadWarehouse(warehouseDistributions.warehouse));\n\n        if (warehouseDistributions.firstWarehouse) await dispatch(warehousesActions.reloadWarehouse(warehouseDistributions.firstWarehouse));\n      }\n    }\n\n    for (let warehouseDistributions of getState().products.selected.warehousesForDelete) {\n      await dispatch(warehousesActions.reloadWarehouse(warehouseDistributions.warehouse));\n    }\n  };\n}\n","import uuid from \"uuid/v4\";\nimport * as types from \"./actionTypes\";\nimport * as warehousesApi from \"../../api/warehouses\";\nimport * as productsApi from \"../../api/products\";\nimport * as productsActions from \"../products/actions\";\n\nexport function fetchWarehouses() {\n  return async (dispatch, getState) => {\n    try {\n      if (getState().warehouses.list.pagination.loading || (getState().warehouses.list.pagination.totalCount !== 0 && getState().warehouses.list.pagination.totalCount <= getState().warehouses.list.items.length)) return;\n\n      dispatch({ type: types.SET_LIST_ERROR, error: null });\n      dispatch({ type: types.SET_LIST_LOADING, loading: true });\n\n      const warehouses = await warehousesApi.fetchWarehousesList({\n        page: getState().warehouses.list.pagination.page,\n        limit: getState().warehouses.list.pagination.limit\n      });\n\n      dispatch({ type: types.SET_LIST_ITEMS, items: [...getState().warehouses.list.items, ...warehouses.items] });\n      dispatch({ type: types.SET_LIST_PAGE, page: getState().warehouses.list.pagination.page + 1 });\n      dispatch({ type: types.SET_LIST_TOTAL_COUNT, totalCount: warehouses.totalCount });\n      dispatch({ type: types.SET_LIST_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_LIST_ERROR, error });\n      dispatch({ type: types.SET_LIST_LOADING, loading: false });\n    }\n  };\n}\n\nexport function fetchProductsBySelectedWarehouses() {\n  return async (dispatch, getState) => {\n    try {\n      const state = getState();\n\n      dispatch({ type: types.SET_SELECTED_PRODUCTS_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_PRODUCTS_LOADING, loading: true });\n\n      const products = await productsApi.fetchProductsListByWarehouse({ warehouseId: state.warehouses.selected.item.id });\n\n      dispatch({ type: types.SET_SELECTED_PRODUCTS_ITEMS, items: [...state.warehouses.selected.products.items, ...products] });\n      dispatch({ type: types.SET_SELECTED_PRODUCTS_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_PRODUCTS_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_PRODUCTS_LOADING, loading: false });\n    }\n  };\n}\n\nexport function clearSelectedWarehouse() {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_SELECTED_ITEM, warehouse: null });\n    dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n    dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    dispatch({ type: types.SET_SELECTED_PRODUCTS_ITEMS, items: [] });\n    dispatch({ type: types.SET_SELECTED_PRODUCTS_ERROR, error: null });\n    dispatch({ type: types.SET_SELECTED_PRODUCTS_LOADING, loading: false });\n    dispatch({ type: types.SET_SELECTED_PRODUCTS_FOR_MOVE, productsForMove: [] });\n    dispatch({ type: types.SET_SELECTED_PRODUCTS_FOR_DELETE, productsForDelete: [] });\n  };\n}\n\nexport function createWarehouse({ title }) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: true });\n\n      const productsDistributions = getState().warehouses.selected.products.items;\n\n      if (productsDistributions.findIndex(productItem => !productItem.product) !== -1) throw new Error(\"Not all products are selected, check the fields\");\n\n      const newWarehouse = await warehousesApi.createWarehouse({ title, productsDistributions });\n\n      if (getState().warehouses.list.pagination.totalCount === getState().warehouses.list.items.length) {\n        dispatch({ type: types.SET_LIST_ITEMS, items: [...getState().warehouses.list.items, newWarehouse] });\n      }\n\n      await dispatch(updateProducts({ productsDistributions }));\n\n      dispatch({ type: types.SET_LIST_TOTAL_COUNT, totalCount: getState().warehouses.list.pagination.totalCount + 1 });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    }\n  };\n}\n\nexport function editWarehouse({ title }, withoutUpdateWarehouses) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: true });\n\n      if (getState().warehouses.selected.products.items.findIndex(productItem => !productItem.product) !== -1) throw new Error(\"Not all products are selected, check the fields\");\n\n      if (getState().warehouses.selected.productsForMove.findIndex(productForMove => productForMove.warehousesDistributions.findIndex(warehouseDistributions => !warehouseDistributions.warehouse) !== -1) !== -1)\n        throw new Error(\"Not all warehouses are selected, check the fields\");\n\n      const id = getState().warehouses.selected.item.id;\n      const items = getState().warehouses.list.items;\n      const productsDistributions = getState().warehouses.selected.products.items;\n      const productsForDelete = getState().warehouses.selected.productsForDelete;\n      const productsForMove = getState().warehouses.selected.productsForMove;\n      const editWarehouseIndexInArray = items.findIndex(item => item.id === id);\n      const warehouse = await warehousesApi.editWarehouse({\n        id,\n        title,\n        productsDistributions,\n        productsForDelete,\n        productsForMove\n      });\n\n      items[editWarehouseIndexInArray] = warehouse;\n\n      if (!withoutUpdateWarehouses) {\n        await dispatch(updateProducts({ productsDistributions, productsForDelete }));\n        dispatch(updateWarehousesByMove({ productsForMove }));\n      }\n\n      dispatch({ type: types.SET_LIST_ITEMS, items: [...items] });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    }\n  };\n}\n\nexport function removeWarehouse() {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: types.SET_SELECTED_ERROR, error: null });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: true });\n\n      await warehousesApi.removeWarehouse(getState().warehouses.selected.item);\n\n      const productsDistributions = getState().warehouses.selected.products.items;\n      const productsForDelete = getState().warehouses.selected.productsForDelete;\n\n      await dispatch(updateProducts({ productsDistributions, productsForDelete, skipEdited: true }));\n\n      dispatch({ type: types.SET_LIST_TOTAL_COUNT, totalCount: getState().warehouses.list.pagination.totalCount - 1 });\n      dispatch({ type: types.SET_LIST_ITEMS, items: [...getState().warehouses.list.items.filter(item => item.id !== getState().warehouses.selected.item.id)] });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    } catch (error) {\n      dispatch({ type: types.SET_SELECTED_ERROR, error });\n      dispatch({ type: types.SET_SELECTED_LOADING, loading: false });\n    }\n  };\n}\n\nexport function reloadWarehouse(warehouse) {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.SET_SELECTED_ITEM, warehouse });\n    await dispatch(fetchProductsBySelectedWarehouses());\n    await dispatch(editWarehouse({ title: warehouse.title }, true));\n    dispatch(clearSelectedWarehouse());\n  };\n}\n\nexport function addProductForMove(productDistributions) {\n  return async (dispatch, getState) => {\n    const productsForMove = getState().warehouses.selected.productsForMove;\n    const indexOfProductDistributions = productsForMove.findIndex(productForMove => productForMove.productDistributions === productDistributions);\n    const newWarehouseDistributions = {\n      id: uuid(),\n      warehouse: null,\n      quantity: 0,\n      productDistributions\n    };\n\n    if (indexOfProductDistributions === -1) {\n      productsForMove.push({\n        id: uuid(),\n        productDistributions,\n        warehousesDistributions: [newWarehouseDistributions]\n      });\n    } else {\n      if (Array.isArray(productsForMove[indexOfProductDistributions].warehousesDistributions)) {\n        productsForMove[indexOfProductDistributions].warehousesDistributions = [...productsForMove[indexOfProductDistributions].warehousesDistributions, newWarehouseDistributions];\n      } else {\n        productsForMove[indexOfProductDistributions].warehousesDistributions = [newWarehouseDistributions];\n      }\n    }\n\n    productDistributions.quantity -= newWarehouseDistributions.quantity;\n    productDistributions[\"edited\"] = true;\n\n    dispatch(calcProductForMoveQuantity(newWarehouseDistributions));\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_FOR_MOVE,\n      productsForMove: [...productsForMove]\n    });\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_ITEMS,\n      items: [...getState().warehouses.selected.products.items]\n    });\n  };\n}\n\nexport function editProductForMove({ warehouseDistributions, warehouse, quantity }) {\n  return async (dispatch, getState) => {\n    const productsForMove = getState().warehouses.selected.productsForMove;\n    const indexOfProductDistributions = productsForMove.findIndex(productForMove => productForMove.productDistributions === warehouseDistributions.productDistributions);\n\n    if (warehouse) warehouseDistributions.warehouse = warehouse;\n    if (quantity >= 0) {\n      if (warehouseDistributions.productDistributions.quantity + warehouseDistributions.quantity - quantity >= 0) {\n        warehouseDistributions.productDistributions.quantity -= quantity - warehouseDistributions.quantity;\n        warehouseDistributions.quantity = quantity;\n      }\n\n      warehouseDistributions.productDistributions[\"moveQuantity\"] = productsForMove[indexOfProductDistributions].warehousesDistributions.reduce((sum, productForMove) => sum + productForMove.quantity, 0);\n    }\n\n    productsForMove[indexOfProductDistributions].warehousesDistributions = [...productsForMove[indexOfProductDistributions].warehousesDistributions];\n\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_FOR_MOVE,\n      productsForMove: [...getState().warehouses.selected.productsForMove]\n    });\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_ITEMS,\n      items: [...getState().warehouses.selected.products.items]\n    });\n  };\n}\n\nexport function removeProductFromMove(warehouseDistributions) {\n  return async (dispatch, getState) => {\n    const productsForMove = getState().warehouses.selected.productsForMove;\n    const indexOfProductDistributions = productsForMove.findIndex(productForMove => productForMove.productDistributions === warehouseDistributions.productDistributions);\n\n    if (indexOfProductDistributions === -1) return console.warn(\"No found productDistributions for remove\");\n\n    const indexOfWarehousesDistributions = productsForMove[indexOfProductDistributions].warehousesDistributions.indexOf(warehouseDistributions);\n\n    if (indexOfWarehousesDistributions === -1) return console.warn(\"No found warehousesDistributions for remove\");\n\n    productsForMove[indexOfProductDistributions].warehousesDistributions.splice(indexOfWarehousesDistributions, 1);\n    productsForMove[indexOfProductDistributions].warehousesDistributions = [...productsForMove[indexOfProductDistributions].warehousesDistributions];\n    warehouseDistributions.productDistributions.quantity += warehouseDistributions.quantity;\n\n    dispatch(calcProductForMoveQuantity(warehouseDistributions));\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_FOR_MOVE,\n      productsForMove: [...productsForMove]\n    });\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_ITEMS,\n      items: [...getState().warehouses.selected.products.items]\n    });\n  };\n}\n\nexport function calcProductForMoveQuantity(warehouseDistributions) {\n  return async (dispatch, getState) => {\n    const productsForMove = getState().warehouses.selected.productsForMove;\n    const indexOfProductDistributions = productsForMove.findIndex(productForMove => productForMove.productDistributions === warehouseDistributions.productDistributions);\n\n    warehouseDistributions.productDistributions[\"moveQuantity\"] = productsForMove[indexOfProductDistributions].warehousesDistributions.reduce((sum, productForMove) => sum + productForMove.quantity, 0);\n    productsForMove[indexOfProductDistributions].warehousesDistributions = [...productsForMove[indexOfProductDistributions].warehousesDistributions];\n\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_FOR_MOVE,\n      productsForMove: [...getState().warehouses.selected.productsForMove]\n    });\n  };\n}\n\nexport function removeProductDistributionsFromMove(productDistributions) {\n  return async (dispatch, getState) => {\n    const productsForMove = getState().warehouses.selected.productsForMove;\n    const indexOfProductDistributions = productsForMove.findIndex(productForMove => productForMove.productDistributions === productDistributions);\n\n    productDistributions[\"moveQuantity\"] = 0;\n\n    if (indexOfProductDistributions !== -1) {\n      productDistributions.quantity += getState().warehouses.selected.productsForMove[indexOfProductDistributions].warehousesDistributions.reduce(\n        (sum, warehouseDistributions) => sum + warehouseDistributions.quantity,\n        0\n      );\n      productsForMove.splice(indexOfProductDistributions, 1);\n    }\n\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_FOR_MOVE,\n      productsForMove: [...productsForMove]\n    });\n  };\n}\n\nexport function addProductForWarehouse() {\n  return async (dispatch, getState) => {\n    const warehouseProducts = getState().warehouses.selected.products.items;\n\n    warehouseProducts.push({\n      id: uuid(),\n      product: null,\n      quantity: 0,\n      isNew: true\n    });\n\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_ITEMS,\n      items: [...warehouseProducts]\n    });\n  };\n}\n\nexport function editProductForWarehouse({ productDistributions, product, quantity }) {\n  return async (dispatch, getState) => {\n    if (product) {\n      if (!productDistributions[\"firstProduct\"]) productDistributions[\"firstProduct\"] = productDistributions.product;\n\n      productDistributions.product = product;\n    }\n    if (quantity >= 0 && productDistributions.product.freeQuantity + productDistributions.quantity - quantity >= 0) {\n      productDistributions.product.freeQuantity -= quantity - productDistributions.quantity;\n      productDistributions.quantity = quantity;\n    }\n\n    productDistributions[\"edited\"] = true;\n\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_ITEMS,\n      items: [...getState().warehouses.selected.products.items]\n    });\n  };\n}\n\nexport function removeProductFromWarehouse(productDistributions) {\n  return async (dispatch, getState) => {\n    const warehouseProducts = getState().warehouses.selected.products.items;\n    const indexOfProductDistributions = warehouseProducts.indexOf(productDistributions);\n\n    if (indexOfProductDistributions === -1) return console.warn(\"No found productDistributions for remove\");\n\n    warehouseProducts.splice(indexOfProductDistributions, 1);\n\n    dispatch(addProductForDelete(productDistributions));\n    dispatch({\n      type: types.SET_SELECTED_PRODUCTS_ITEMS,\n      items: [...warehouseProducts]\n    });\n  };\n}\n\nexport function addProductForDelete(productDistributions) {\n  return async (dispatch, getState) => {\n    if (!productDistributions.isNew) {\n      const productsForDelete = getState().warehouses.selected.productsForDelete;\n\n      productsForDelete.push(productDistributions);\n\n      dispatch({\n        type: types.SET_SELECTED_PRODUCTS_FOR_DELETE,\n        productsForDelete: [...productsForDelete]\n      });\n    }\n  };\n}\n\nexport function updateProducts({ productsDistributions, productsForDelete = [], skipEdited }) {\n  return async dispatch => {\n    for (let productDistributions of productsDistributions) {\n      if (productDistributions.edited || skipEdited) {\n        await dispatch(productsActions.reloadProuduct(productDistributions.product));\n\n        if (productDistributions.firstProduct) await dispatch(productsActions.reloadProuduct(productDistributions.firstProduct));\n      }\n    }\n\n    for (let productDistributions of productsForDelete) {\n      await dispatch(productsActions.reloadProuduct(productDistributions.product));\n    }\n  };\n}\n\nexport function updateWarehousesByMove({ productsForMove }) {\n  return async (dispatch, getState) => {\n    const items = getState().warehouses.list.items;\n\n    for (const productForMove of productsForMove) {\n      for (const warehouseDistributions of productForMove.warehousesDistributions) {\n        if (warehouseDistributions.quantity > 0) {\n          const indexOfEditedWarehouse = items.findIndex(warehouseItem => warehouseItem.id === warehouseDistributions.warehouse.id);\n          const productsDistributions = await productsApi.fetchProductsListByWarehouse({ warehouseId: warehouseDistributions.warehouse.id })\n          const warehouse = await warehousesApi.editWarehouse({...warehouseDistributions.warehouse, productsDistributions});\n\n          if (indexOfEditedWarehouse !== -1) {\n            items[indexOfEditedWarehouse] = warehouse;\n          }\n        }\n      }\n    }\n\n    dispatch({ type: types.SET_LIST_ITEMS, items: [...items] });\n  };\n}\n","import React from \"react\";\nimport \"./loader.scss\";\n\nexport default function Loader({ full }) {\n  return (\n    <div className=\"loader-container\" style={full && { position: \"absolute\" }}>\n      <div className=\"lds-hourglass\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AsyncSelect from \"react-select-async-paginate\";\n\nexport default function SelectElement(props) {\n  return (\n    <div style={{ position: \"relative\" }}>\n      <AsyncSelect {...props} />\n      {!!props.disabled && <div style={{ backgroundColor: \"rgba(0,0,0,0.05)\", position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, borderRadius: 3 }}></div>}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport SelectElement from \"./SelectElement\";\nimport * as warehousesActions from \"../store/warehouses/actions\";\nimport * as warehousesApi from \"../api/warehouses\";\n\nclass ProductsMoveElement extends Component {\n  state = {\n    warehousesSelectPagination: {\n      page: 1,\n      limit: 10,\n      totalCount: 0,\n      count: 0,\n      loading: false,\n      searchString: \"\"\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.warehousesDistributions !== this.props.warehousesDistributions) {\n      this.resetOptions();\n    }\n  }\n\n  onChangeWarehouse(warehouseOption) {\n    this.props.dispatch(warehousesActions.editProductForMove({ warehouseDistributions: this.props.productForMoveItem, warehouse: warehouseOption.value }));\n  }\n\n  onChangeQuantity(quantity) {\n    this.props.dispatch(warehousesActions.editProductForMove({ warehouseDistributions: this.props.productForMoveItem, quantity }));\n  }\n\n  onClickRemove() {\n    this.props.dispatch(warehousesActions.removeProductFromMove(this.props.productForMoveItem));\n  }\n\n  async loadOptions(searchString) {\n    if (this.state.warehousesSelectPagination.loading) return;\n\n    this.setState({ warehousesSelectPagination: { ...this.state.warehousesSelectPagination, loading: true } });\n\n    if (searchString !== this.state.warehousesSelectPagination.searchString) {\n      this.resetOptions();\n    }\n\n    const warehouses = await warehousesApi.fetchWarehousesList({\n      searchString,\n      page: this.state.warehousesSelectPagination.page,\n      limit: this.state.warehousesSelectPagination.limit\n    });\n\n    this.setState({\n      warehousesSelectPagination: {\n        ...this.state.warehousesSelectPagination,\n        totalCount: warehouses.totalCount,\n        count: this.state.warehousesSelectPagination.count + warehouses.items.length,\n        page: this.state.warehousesSelectPagination.page + 1,\n        loading: false,\n        searchString\n      }\n    });\n\n    return {\n      options: warehouses.items.map(item => ({ value: item, label: item.title })),\n      hasMore: this.state.warehousesSelectPagination.totalCount !== 0 && this.state.warehousesSelectPagination.totalCount > this.state.warehousesSelectPagination.count\n    };\n  }\n\n  filterOptionsBySelected(options) {\n    return options.filter(option => {\n      if (this.props.selectedWarehouse.id === option.value.id) return false;\n\n      return !this.props.warehousesDistributions.find(warehouseDistributions => {\n        if (!warehouseDistributions.warehouse) return false;\n\n        return warehouseDistributions.warehouse.id === option.value.id;\n      });\n    });\n  }\n\n  reduceOptions(prevOptions, loadedOptions) {\n    return [...prevOptions, ...this.filterOptionsBySelected(loadedOptions)];\n  }\n\n  resetOptions() {\n    this.setState({ warehousesSelectPagination: { ...this.state.warehousesSelectPagination, page: 1, totalCount: 0, count: 0 } });\n  }\n\n  render() {\n    return (\n      <Form.Row className=\"py-3 mb-3\" style={{ backgroundColor: \"#ddd\", borderRadius: 3 }}>\n        <Col sm=\"4\">\n          <SelectElement\n            cacheUniq={this.props.warehousesDistributions}\n            reduceOptions={(prevOptions, loadedOptions) => this.reduceOptions(prevOptions, loadedOptions)}\n            loadOptions={searchString => this.loadOptions(searchString)}\n            onChange={e => this.onChangeWarehouse(e)}\n          />\n        </Col>\n        <Col sm=\"4\">\n          <Form.Control\n            required\n            placeholder=\"Quantity\"\n            type=\"number\"\n            min={0}\n            value={this.props.productForMoveItem.quantity}\n            disabled={!this.props.productForMoveItem.warehouse}\n            onChange={e => this.onChangeQuantity(+e.target.value)}\n          />\n        </Col>\n        <Col sm=\"4\">\n          <Button block variant=\"danger\" onClick={() => this.onClickRemove()} className=\"w-100\">\n            Remove\n          </Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedWarehouse: state.warehouses.selected.item\n  };\n}\n\nexport default connect(mapStateToProps)(ProductsMoveElement);\n","import * as actionTypes from \"./actionTypes\";\n\nconst initialState = {\n  selected: {\n    item: null,\n    products: {\n      items: [],\n      error: null,\n      loading: false\n    },\n    error: null,\n    loading: false,\n    productsForDelete: [],\n    productsForMove: []\n  },\n  list: {\n    items: [],\n    error: null,\n    loading: false,\n    pagination: {\n      page: 1,\n      limit: 10,\n      totalCount: 0\n    }\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SELECTED_ITEM:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          item: action.warehouse\n        }\n      };\n    case actionTypes.SET_SELECTED_PRODUCTS_FOR_MOVE:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          productsForMove: action.productsForMove\n        }\n      };\n    case actionTypes.SET_SELECTED_PRODUCTS_FOR_DELETE:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          productsForDelete: action.productsForDelete\n        }\n      };\n    case actionTypes.SET_SELECTED_LOADING:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          loading: action.loading\n        }\n      };\n    case actionTypes.SET_SELECTED_ERROR:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          error: action.error\n        }\n      };\n    case actionTypes.SET_SELECTED_PRODUCTS_ITEMS:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          products: {\n            ...state.selected.products,\n            items: action.items\n          }\n        }\n      };\n    case actionTypes.SET_SELECTED_PRODUCTS_ERROR:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          products: {\n            ...state.selected.products,\n            error: action.error\n          }\n        }\n      };\n    case actionTypes.SET_SELECTED_PRODUCTS_LOADING:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          products: {\n            ...state.selected.products,\n            loading: action.loading\n          }\n        }\n      };\n    case actionTypes.SET_LIST_ITEMS:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          items: action.items\n        }\n      };\n    case actionTypes.SET_LIST_PAGE:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          pagination: {\n            ...state.list.pagination,\n            page: action.page\n          }\n        }\n      };\n    case actionTypes.SET_LIST_TOTAL_COUNT:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          pagination: {\n            ...state.list.pagination,\n            totalCount: +action.totalCount\n          }\n        }\n      };\n    case actionTypes.SET_LIST_LOADING:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          loading: action.loading\n        }\n      };\n    case actionTypes.SET_LIST_ERROR:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          error: action.error\n        }\n      };\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport function getWarehousesDistributionsByProductDistributions(store, productDistributions) {\n  const indexOfProductDistributions = store.warehouses.selected.productsForMove.findIndex(productForMove => productForMove.productDistributions === productDistributions);\n\n  if (indexOfProductDistributions !== -1) \n    return store.warehouses.selected.productsForMove[indexOfProductDistributions].warehousesDistributions;\n  else \n    return [];\n}","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ProductsMoveElement from \"./ProductsMoveElement\";\nimport * as warehousesActions from \"../store/warehouses/actions\";\nimport * as warehousesSelectors from \"../store/warehouses/reducer\";\n\nclass ProductsMoveList extends Component {\n  onClickAddProductsMove() {\n    this.props.dispatch(warehousesActions.addProductForMove(this.props.productDistributions));\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ position: \"relative\" }}>\n          {this.props.warehousesDistributions.map(item => (\n            <ProductsMoveElement key={item.id} productForMoveItem={item} warehousesDistributions={this.props.warehousesDistributions} />\n          ))}\n        </div>\n        {!this.props.productDistributions.quantity <= 0 && (\n          <Button block onClick={() => this.onClickAddProductsMove()}>\n            Add new move\n          </Button>\n        )}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    warehousesDistributions: warehousesSelectors.getWarehousesDistributionsByProductDistributions(state, ownProps.productDistributions),\n    productsForMove: state.warehouses.selected.productsForMove\n  };\n}\n\nexport default connect(mapStateToProps)(ProductsMoveList);\n","import React, { Component } from \"react\";\nimport { Form, Col, Button, ButtonGroup, InputGroup, FormControl } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport SelectElement from \"./SelectElement\";\nimport * as productsApi from \"../api/products\";\nimport * as warehousesActions from \"../store/warehouses/actions\";\nimport ProductsMoveList from \"./ProductsMoveList\";\n\nclass ProductsDistributionElement extends Component {\n  state = {\n    productsSelectPagination: {\n      page: 1,\n      limit: 10,\n      totalCount: 0,\n      count: 0,\n      loading: false,\n      searchString: \"\"\n    },\n    showMove: false\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.productsDistributions !== this.props.productsDistributions) {\n      this.resetOptions();\n    }\n  }\n\n  onChangeProduct(productOption) {\n    this.props.dispatch(warehousesActions.editProductForWarehouse({ productDistributions: this.props.productDistributions, product: productOption.value }));\n  }\n\n  onChangeQuantity(quantity) {\n    this.props.dispatch(warehousesActions.editProductForWarehouse({ productDistributions: this.props.productDistributions, quantity }));\n  }\n\n  async loadOptions(searchString) {\n    if (this.state.productsSelectPagination.loading) return;\n\n    this.setState({ productsSelectPagination: { ...this.state.productsSelectPagination, loading: true } });\n\n    if (searchString !== this.state.productsSelectPagination.searchString) {\n      this.resetOptions();\n    }\n\n    const products = await productsApi.fetchAllProductsList({\n      searchString,\n      page: this.state.productsSelectPagination.page,\n      limit: this.state.productsSelectPagination.limit\n    });\n\n    this.setState({\n      productsSelectPagination: {\n        ...this.state.productsSelectPagination,\n        totalCount: products.totalCount,\n        count: this.state.productsSelectPagination.count + products.items.length,\n        page: this.state.productsSelectPagination.page + 1,\n        loading: false,\n        searchString\n      }\n    });\n\n    return {\n      options: products.items.map(item => ({ value: item, label: item.title })),\n      hasMore: this.state.productsSelectPagination.totalCount !== 0 && this.state.productsSelectPagination.totalCount > this.state.productsSelectPagination.count\n    };\n  }\n\n  filterOptionsBySelected(options) {\n    return options.filter(option => {\n      return !this.props.productsDistributions.find(selectedProduct => {\n        if (!selectedProduct.product) return false;\n        return selectedProduct.product.id === option.value.id;\n      });\n    });\n  }\n\n  reduceSelectOptions(prevOptions, loadedOptions) {\n    return [...prevOptions, ...this.filterOptionsBySelected(loadedOptions)];\n  }\n\n  resetOptions() {\n    this.setState({ productsSelectPagination: { ...this.state.productsSelectPagination, page: 1, totalCount: 0, count: 0 } });\n  }\n\n  onClickRemove() {\n    this.props.dispatch(warehousesActions.removeProductDistributionsFromMove(this.props.productDistributions));\n    this.props.dispatch(warehousesActions.removeProductFromWarehouse(this.props.productDistributions));\n  }\n\n  onClickMove() {\n    if (this.state.showMove) this.props.dispatch(warehousesActions.removeProductDistributionsFromMove(this.props.productDistributions));\n\n    this.setState({ showMove: !this.state.showMove });\n  }\n\n  render() {\n    return (\n      <>\n        <Form.Row className=\"my-3\">\n          <Col sm=\"4\">\n            <SelectElement\n              disabled={this.state.showMove || this.props.onlyMove || !this.props.productDistributions.isNew}\n              cacheUniq={this.props.productsDistributions}\n              reduceOptions={(prevOptions, loadedOptions) => this.reduceSelectOptions(prevOptions, loadedOptions)}\n              loadOptions={searchString => this.loadOptions(searchString)}\n              onChange={e => this.onChangeProduct(e)}\n              value={\n                this.props.productDistributions.product && {\n                  label: this.props.productDistributions.product.title,\n                  value: this.props.productDistributions.product\n                }\n              }\n            />\n          </Col>\n          <Col sm=\"4\">\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"Quantity\"\n                type=\"number\"\n                min={0}\n                value={this.props.productDistributions.quantity}\n                disabled={this.state.showMove || this.props.onlyMove || !this.props.productDistributions.product}\n                onChange={e => this.onChangeQuantity(+e.target.value)}\n                aria-describedby=\"free-quantity\"\n              />\n              {this.props.productDistributions.product && (\n                <InputGroup.Append>\n                  <InputGroup.Text id=\"free-quantity\">\n                    {this.props.productDistributions.product.freeQuantity}\n                  </InputGroup.Text>\n                </InputGroup.Append>\n              )}\n            </InputGroup>\n          </Col>\n          <Col sm=\"4\">\n            <ButtonGroup className=\"w-100\">\n              {!this.props.onlyMove && (\n                <Button variant=\"danger\" onClick={() => this.onClickRemove()}>\n                  Remove\n                </Button>\n              )}\n              {this.props.selectedWarehouse && !this.props.productDistributions.isNew && (\n                <Button variant=\"info\" onClick={() => this.onClickMove()} active={this.state.showMove}>\n                  Move\n                </Button>\n              )}\n            </ButtonGroup>\n          </Col>\n        </Form.Row>\n        {this.state.showMove && <ProductsMoveList productDistributions={this.props.productDistributions} />}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedWarehouse: state.warehouses.selected.item,\n    productsDistributions: state.warehouses.selected.products.items\n  };\n}\n\nexport default connect(mapStateToProps)(ProductsDistributionElement);\n","import React, { Component } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport ProductsDistributionElement from \"./ProductsDistributionElement\";\nimport * as warehousesActions from \"../store/warehouses/actions\";\nimport Loader from \"./Loader\";\n\nclass ProductsDistributionList extends Component {\n  onClickAddProductDistribution() {\n    this.props.dispatch(warehousesActions.addProductForWarehouse());\n  }\n\n  render() {\n    return (\n      <>\n        <h4>List of owned products</h4>\n        {!!this.props.selectedWarehouseProductsError && <Alert variant=\"danger\">{this.props.selectedWarehouseProductsError.message}</Alert>}\n        <div>\n          {this.props.selectedWarehouseProducts.map(item => (\n            <ProductsDistributionElement key={item.id} productDistributions={item} onlyMove={this.props.onlyMove} />\n          ))}\n          {this.props.selectedWarehouseProductsLoading && <Loader />}\n        </div>\n        {!this.props.selectedWarehouseProductsLoading && !this.props.onlyMove && (\n          <Button block className=\"mt-3\" onClick={() => this.onClickAddProductDistribution()}>\n            Add product\n          </Button>\n        )}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedWarehouseProducts: state.warehouses.selected.products.items,\n    selectedWarehouseProductsLoading: state.warehouses.selected.products.loading,\n    selectedWarehouseProductsError: state.warehouses.selected.products.error\n  };\n}\n\nexport default connect(mapStateToProps)(ProductsDistributionList);\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\nimport * as warehousesActions from \"../store/warehouses/actions\";\nimport ProductsDistributionList from \"./ProductsDistributionList\";\n\nclass WarehouseModal extends Component {\n  state = {\n    title: \"\",\n    showBeforeRemoveModal: false,\n    showMoveBeforeRemoveModal: false\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selectedWarehouse !== prevProps.selectedWarehouse) {\n      if (this.props.selectedWarehouse) {\n        this.setState({ ...this.props.selectedWarehouse });\n      } else {\n        this.setState({ title: \"\" });\n      }\n    }\n  }\n\n  async onClickWarehouseSave(event) {\n    event.preventDefault();\n\n    if (this.props.selectedWarehouse) {\n      await this.props.dispatch(warehousesActions.editWarehouse({ ...this.state }));\n    } else {\n      await this.props.dispatch(warehousesActions.createWarehouse({ ...this.state }));\n    }\n\n    if (!this.props.selectedError) this.onWarehouseClose();\n  }\n\n  onWarehouseClose() {\n    this.setState({ id: null, title: \"\", quantity: 0, showBeforeRemoveModal: false, showMoveBeforeRemoveModal: false });\n    this.props.dispatch(warehousesActions.clearSelectedWarehouse());\n    this.props.onClose();\n  }\n\n  featchWarehouseProducts() {\n    if (this.props.selectedWarehouse) {\n      this.props.dispatch(warehousesActions.fetchProductsBySelectedWarehouses());\n    }\n  }\n\n  async onClickRemoveWarehouse() {\n    await this.props.dispatch(warehousesActions.removeWarehouse());\n\n    if (!this.props.selectedError) this.onWarehouseClose();\n  }\n\n  async onClickRemoveWarehouseWithMove() {\n    await this.props.dispatch(warehousesActions.editWarehouse({ ...this.state }));\n    this.onClickRemoveWarehouse();\n  }\n\n  onShowBeforeRemoveModal() {\n    this.props.onClose();\n    this.setState({ showBeforeRemoveModal: true });\n  }\n\n  onShowMoveBeforeRemoveModal() {\n    this.setState({ showBeforeRemoveModal: false, showMoveBeforeRemoveModal: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Modal show={this.props.show} onHide={() => this.onWarehouseClose()} onShow={() => this.featchWarehouseProducts()}>\n          <Form onSubmit={event => this.onClickWarehouseSave(event)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Warehouse information</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ position: \"relative\" }}>\n              {this.props.selectedLoading && <Loader full />}\n              {!!this.props.selectedError && <Alert variant=\"danger\">{this.props.selectedError.message}</Alert>}\n              <Form.Group>\n                <Form.Label>Warehouse title</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter warehouse title\" required value={this.state.title} onChange={e => this.setState({ title: e.target.value })} />\n              </Form.Group>\n              <ProductsDistributionList />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => this.onWarehouseClose()}>\n                Close\n              </Button>\n              {this.state.id && (\n                <Button variant=\"danger\" onClick={() => this.onShowBeforeRemoveModal()}>\n                  Remove\n                </Button>\n              )}\n              <Button variant=\"primary\" type=\"submit\">\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n        <Modal show={this.state.showBeforeRemoveModal} onHide={() => this.onWarehouseClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Question</Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ position: \"relative\" }}>Are you want to remove the warehouse?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.onWarehouseClose()}>\n              Close\n            </Button>\n            {!!this.props.selectedWarehouseProducts.length && (\n              <Button variant=\"primary\" onClick={() => this.onShowMoveBeforeRemoveModal()}>\n                Move product before remove\n              </Button>\n            )}\n            <Button variant=\"danger\" onClick={() => this.onClickRemoveWarehouse()}>\n              Yes, remove\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={this.state.showMoveBeforeRemoveModal} onHide={() => this.onWarehouseClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Move products for another warehouses</Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ position: \"relative\" }}>\n            <ProductsDistributionList onlyMove />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.onWarehouseClose()}>\n              Close\n            </Button>\n            <Button variant=\"danger\" onClick={() => this.onClickRemoveWarehouseWithMove()}>\n              Move and remove\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedWarehouseProducts: state.warehouses.selected.products.items,\n    selectedWarehouse: state.warehouses.selected.item,\n    selectedLoading: state.warehouses.selected.loading,\n    selectedError: state.warehouses.selected.error\n  };\n}\n\nexport default connect(mapStateToProps)(WarehouseModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert, Button, Table } from \"react-bootstrap\";\nimport * as wrehousesAction from \"../store/warehouses/actions\";\nimport * as wrehousesActionTypes from \"../store/warehouses/actionTypes\";\nimport Loader from \"./Loader\";\nimport WarehouseModal from \"./WarehouseModal\";\n\nclass WarehousesList extends Component {\n  state = {\n    showWarehouseModal: false\n  };\n  scrollContainer = null;\n\n  async componentDidMount() {\n    await this.props.dispatch(wrehousesAction.fetchWarehouses());\n\n    while (this.scrollContainer.scrollHeight <= this.scrollContainer.clientHeight && this.props.listItems.length < this.props.listTotalCount) {\n      await this.props.dispatch(wrehousesAction.fetchWarehouses());\n    }\n  }\n\n  onClickWarehouse(warehouse) {\n    this.props.dispatch({ type: wrehousesActionTypes.SET_SELECTED_ITEM, warehouse });\n    this.setState({ showWarehouseModal: true });\n  }\n\n  onScrollList(element) {\n    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n      this.props.dispatch(wrehousesAction.fetchWarehouses());\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ justifyContent: \"space-between\", display: \"flex\" }} className=\"my-3\">\n          <h4>Warehouses list</h4>\n          <Button onClick={() => this.setState({ showWarehouseModal: true })}>Add warehouse</Button>\n          <WarehouseModal onClose={() => this.setState({ showWarehouseModal: false })} show={this.state.showWarehouseModal} />\n        </div>\n        {!!this.props.listError && <Alert variant=\"danger\">{this.props.listError.message}</Alert>}\n        <div style={{ position: \"relative\" }}>\n          <div className=\"list-container\" onScroll={e => this.onScrollList(e.target)} ref={ref => (this.scrollContainer = ref)}>\n          <Table striped bordered hover className=\"mb-0\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Title</th>\n                  <th>Products quantity</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.listItems.map(warehouse => (\n                  <tr key={warehouse.id} onClick={() => this.onClickWarehouse(warehouse)}>\n                    <td>{warehouse.id}</td>\n                    <td>{warehouse.title}</td>\n                    <td>{warehouse.productsQuantity}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n          {this.props.listLoading && <Loader full />}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedItem: state.warehouses.selected.item,\n    listItems: state.warehouses.list.items,\n    listLoading: state.warehouses.list.loading,\n    listError: state.warehouses.list.error\n  };\n}\n\nexport default connect(mapStateToProps)(WarehousesList);\n","import React, { Component } from \"react\";\nimport { Form, Col, Button, ButtonGroup } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport SelectElement from \"./SelectElement\";\nimport * as warehousesApi from \"../api/warehouses\";\nimport * as productsActions from \"../store/products/actions\";\n\nclass WarehousesDistributionElement extends Component {\n  state = {\n    warehousesSelectPagination: {\n      page: 1,\n      limit: 10,\n      totalCount: 0,\n      count: 0,\n      loading: false,\n      searchString: \"\"\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.warehousesDistributions !== this.props.warehousesDistributions) {\n      this.resetOptions();\n    }\n  }\n\n  onChangeWarehouse(warehouseOption) {\n    this.props.dispatch(productsActions.editWarehouseForProduct({ warehouseDistributions: this.props.warehouseDistributions, warehouse: warehouseOption.value }));\n  }\n\n  onChangeQuantity(quantity) {\n    this.props.dispatch(productsActions.editWarehouseForProduct({ warehouseDistributions: this.props.warehouseDistributions, quantity }));\n  }\n\n  async loadOptions(searchString) {\n    if (this.state.warehousesSelectPagination.loading) return;\n\n    this.setState({ warehousesSelectPagination: { ...this.state.warehousesSelectPagination, loading: true } });\n\n    if (searchString !== this.state.warehousesSelectPagination.searchString) {\n      this.resetOptions();\n    }\n\n    const warehouses = await warehousesApi.fetchWarehousesList({\n      searchString,\n      page: this.state.warehousesSelectPagination.page,\n      limit: this.state.warehousesSelectPagination.limit\n    });\n\n    this.setState({\n      warehousesSelectPagination: {\n        ...this.state.warehousesSelectPagination,\n        totalCount: warehouses.totalCount,\n        count: this.state.warehousesSelectPagination.count + warehouses.items.length,\n        page: this.state.warehousesSelectPagination.page + 1,\n        loading: false,\n        searchString\n      }\n    });\n\n    return {\n      options: warehouses.items.map(item => ({ value: item, label: item.title })),\n      hasMore: this.state.warehousesSelectPagination.totalCount !== 0 && this.state.warehousesSelectPagination.totalCount > this.state.warehousesSelectPagination.count\n    };\n  }\n\n  filterOptionsBySelected(options) {\n    return options.filter(option => {\n      return !this.props.warehousesDistributions.find(selectedWarehouse => {\n        if (!selectedWarehouse.warehouse) return false;\n        return selectedWarehouse.warehouse.id === option.value.id;\n      });\n    });\n  }\n\n  reduceSelectOptions(prevOptions, loadedOptions) {\n    return [...prevOptions, ...this.filterOptionsBySelected(loadedOptions)];\n  }\n\n  resetOptions() {\n    this.setState({ warehousesSelectPagination: { ...this.state.warehousesSelectPagination, page: 1, totalCount: 0, count: 0 } });\n  }\n\n  onClickRemove() {\n    this.props.dispatch(productsActions.removeWarehouseFromProduct(this.props.warehouseDistributions));\n  }\n\n  render() {\n    return (\n      <>\n        <Form.Row className=\"my-3\">\n          <Col sm=\"4\">\n            <SelectElement\n              cacheUniq={this.props.warehousesDistributions}\n              reduceOptions={(prevOptions, loadedOptions) => this.reduceSelectOptions(prevOptions, loadedOptions)}\n              loadOptions={searchString => this.loadOptions(searchString)}\n              onChange={e => this.onChangeWarehouse(e)}\n              value={\n                this.props.warehouseDistributions.warehouse && {\n                  label: this.props.warehouseDistributions.warehouse.title,\n                  value: this.props.warehouseDistributions.warehouse\n                }\n              }\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Form.Control\n              required\n              placeholder=\"Quantity\"\n              type=\"number\"\n              min={0}\n              disabled={!this.props.warehouseDistributions.warehouse}\n              value={this.props.warehouseDistributions.quantity}\n              onChange={e => this.onChangeQuantity(+e.target.value)}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <ButtonGroup className=\"w-100\">\n              <Button variant=\"danger\" onClick={() => this.onClickRemove()}>\n                Remove\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Form.Row>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    warehousesDistributions: state.products.selected.warehouses.items\n  };\n}\n\nexport default connect(mapStateToProps)(WarehousesDistributionElement);\n","import React, { Component } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport WarehousesDistributionElement from \"./WarehousesDistributionElement\";\nimport * as productsActions from \"../store/products/actions\";\nimport Loader from \"./Loader\";\n\nclass WarehousesDistributionList extends Component {\n  onClickAddWarehousesDistribution() {\n    this.props.dispatch(productsActions.addWarehouseForProduct());\n  }\n\n  render() {\n    return (\n      <>\n        {(!!this.props.selectedProduct.freeQuantity || !!this.props.selectedProductWarehouses.length) && (\n          <>\n            <h4>List of owned warehouses</h4>\n            {!!this.props.selectedProductWarehousesError && <Alert variant=\"danger\">{this.props.selectedProductWarehousesError.message}</Alert>}\n            <div style={{ position: \"relative\" }}>\n              {this.props.selectedProductWarehouses.map(item => (\n                <WarehousesDistributionElement key={item.id} warehouseDistributions={item} />\n              ))}\n              {this.props.selectedProductWarehousesLoading && <Loader />}\n            </div>\n            {this.props.selectedProduct && <div className=\"mb-3\">Free count: {this.props.selectedProduct.freeQuantity}</div>}\n            {!this.props.selectedProductWarehousesLoading && (\n              <Button block onClick={() => this.onClickAddWarehousesDistribution()}>\n                Add to warehouse\n              </Button>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedProduct: state.products.selected.item,\n    selectedProductWarehouses: state.products.selected.warehouses.items,\n    selectedProductWarehousesLoading: state.products.selected.warehouses.loading,\n    selectedProductWarehousesError: state.products.selected.warehouses.error\n  };\n}\n\nexport default connect(mapStateToProps)(WarehousesDistributionList);\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\nimport WarehousesDistributionList from \"./WarehousesDistributionList\";\nimport * as productsActions from \"../store/products/actions\";\n\nclass ProductModal extends Component {\n  state = {\n    showBeforeRemoveModal: false\n  };\n\n  async onClickProductSave(event) {\n    event.preventDefault();\n\n    await this.props.dispatch(productsActions.saveProduct());\n\n    if (!this.props.selectedError) this.onProductClose();\n  }\n\n  onProductClose() {\n    this.setState({ id: null, title: \"\", quantity: 0, showBeforeRemoveModal: false });\n    this.props.dispatch(productsActions.clearSelectedProduct());\n    this.props.onClose();\n  }\n\n  featchProductWarehouses() {\n    if (this.props.selectedProduct) {\n      this.props.dispatch(productsActions.fetchWarehousesBySelectedProduct());\n    }\n  }\n\n  async onClickRemoveProduct() {\n    await this.props.dispatch(productsActions.removeProduct());\n\n    if (!this.props.selectedError) this.onProductClose();\n  }\n\n  onShowBeforeRemoveModal() {\n    this.props.onClose();\n    this.setState({ showBeforeRemoveModal: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Modal show={this.props.show} onHide={() => this.onProductClose()} onShow={() => this.featchProductWarehouses()}>\n          <Form onSubmit={event => this.onClickProductSave(event)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Product information</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ position: \"relative\" }}>\n              {this.props.selectedLoading && <Loader full />}\n              {!!this.props.selectedError && <Alert variant=\"danger\">{this.props.selectedError.message}</Alert>}\n\n              <Form.Group>\n                <Form.Label>Product title</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  required\n                  placeholder=\"Enter product title\"\n                  value={this.props.selectedProduct.title || \"\"}\n                  onChange={e => this.props.dispatch(productsActions.editProduct({ title: e.target.value }))}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Product quantity</Form.Label>\n                <Form.Control\n                  required\n                  type=\"number\"\n                  min={0}\n                  placeholder=\"Enter product quantity\"\n                  value={this.props.selectedProduct.quantity || 0}\n                  onChange={e => this.props.dispatch(productsActions.editProduct({ quantity: +e.target.value }))}\n                />\n              </Form.Group>\n\n              <WarehousesDistributionList\n                quantity={this.state.quantity}\n                onChange={(warehousesDistributions, warehousesDistributionsToDelete) => this.setState({ warehousesDistributions, warehousesDistributionsToDelete })}\n                onChangeQuantitySum={quantitySum => this.setState({ minQuantity: quantitySum })}\n              />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => this.onProductClose()}>\n                Close\n              </Button>\n              {this.props.selectedProduct.id && (\n                <Button variant=\"danger\" onClick={() => this.onShowBeforeRemoveModal()}>\n                  Remove\n                </Button>\n              )}\n              <Button variant=\"primary\" type=\"submit\">\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n        <Modal show={this.state.showBeforeRemoveModal} onHide={() => this.onProductClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Question</Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ position: \"relative\" }}>Are you want to remove the product? It will be removed from all warehouses.</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.onProductClose()}>\n              Close\n            </Button>\n            <Button variant=\"danger\" onClick={() => this.onClickRemoveProduct()}>\n              Yes, remove\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedProduct: state.products.selected.item,\n    selectedProductWarehouses: state.products.selected.warehouses.items,\n    selectedLoading: state.products.selected.loading,\n    selectedError: state.products.selected.error\n  };\n}\n\nexport default connect(mapStateToProps)(ProductModal);\n","import React, { Component } from \"react\";\nimport { Table, Button, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport * as productsActions from \"../store/products/actions\";\nimport * as productsActionTypes from \"../store/products/actionTypes\";\nimport ProductModal from \"./ProductModal\";\nimport Loader from \"./Loader\";\n\nclass ProductsList extends Component {\n  state = {\n    showProductModal: false\n  };\n  scrollContainer = null;\n\n  async componentDidMount() {\n    await this.props.dispatch(productsActions.fetchProducts());\n\n    while (this.scrollContainer.scrollHeight <= this.scrollContainer.clientHeight && this.props.listItems.length < this.props.listTotalCount) {\n      await this.props.dispatch(productsActions.fetchProducts());\n    }\n  }\n\n  onClickProduct(product) {\n    this.props.dispatch({ type: productsActionTypes.SET_SELECTED_ITEM, product });\n    this.setState({ showProductModal: true });\n  }\n\n  onClickAddProduct() {\n    this.setState({ showProductModal: true });\n  }\n\n  onScrollList(element) {\n    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n      this.props.dispatch(productsActions.fetchProducts());\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ justifyContent: \"space-between\", display: \"flex\" }} className=\"my-3\">\n          <h4>Products list</h4>\n          <Button onClick={() => this.onClickAddProduct()}>Add product</Button>\n          <ProductModal onClose={() => this.setState({ showProductModal: false })} show={this.state.showProductModal} />\n        </div>\n        {!!this.props.listError && <Alert variant=\"danger\">{this.props.listError.message}</Alert>}\n        <div style={{ position: \"relative\" }}>\n          <div className=\"list-container\" onScroll={e => this.onScrollList(e.target)} ref={ref => (this.scrollContainer = ref)}>\n            <Table striped bordered hover className=\"mb-0\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Title</th>\n                  <th>Free</th>\n                  <th>Quantity</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.listItems.map(product => (\n                  <tr key={product.id} onClick={() => this.onClickProduct(product)}>\n                    <td>{product.id}</td>\n                    <td>{product.title}</td>\n                    <td>{product.freeQuantity}</td>\n                    <td>{product.quantity}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n          {this.props.listLoading && <Loader full />}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedWarehouse: state.warehouses.selected.item,\n    selectedItem: state.products.selected.item,\n    listItems: state.products.list.items,\n    listTotalCount: state.products.list.pagination.totalCount,\n    listLoading: state.products.list.loading,\n    listError: state.products.list.error\n  };\n}\n\nexport default connect(mapStateToProps)(ProductsList);\n","import * as actionTypes from \"./actionTypes\";\n\nconst initialState = {\n  selected: {\n    item: {},\n    warehouses: {\n      items: [],\n      error: null,\n      loading: false,\n    },\n    error: null,\n    loading: false,\n    warehousesForDelete: []\n  },\n  list: {\n    items: [],\n    error: null,\n    loading: false,\n    pagination: {\n      page: 1,\n      limit: 10,\n      totalCount: 0\n    }\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SELECTED_ITEM:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          item: action.product\n        }\n      };\n    case actionTypes.SET_SELECTED_LOADING:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          loading: action.loading\n        }\n      };\n    case actionTypes.SET_SELECTED_ERROR:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          error: action.error\n        }\n      };\n    case actionTypes.SET_SELECTED_WAREHOUSES_FOR_DELETE:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          warehousesForDelete: action.warehousesForDelete\n        }\n      };\n    case actionTypes.SET_SELECTED_WAREHOUSES_ITEMS:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          warehouses: {\n            ...state.selected.warehouses,\n            items: action.items\n          }\n        }\n      };\n    case actionTypes.SET_SELECTED_WAREHOUSES_ERROR:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          warehouses: {\n            ...state.selected.warehouses,\n            error: action.error\n          }\n        }\n      };\n    case actionTypes.SET_SELECTED_WAREHOUSES_LOADING:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          warehouses: {\n            ...state.selected.warehouses,\n            loading: action.loading\n          }\n        }\n      };\n    case actionTypes.SET_LIST_ITEMS:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          items: action.items\n        }\n      };\n    case actionTypes.SET_LIST_PAGE:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          pagination: {\n            ...state.list.pagination,\n            page: action.page\n          }\n        }\n      };\n    case actionTypes.SET_LIST_TOTAL_COUNT:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          pagination: {\n            ...state.list.pagination,\n            totalCount: +action.totalCount\n          }\n        }\n      };\n    case actionTypes.SET_LIST_LOADING:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          loading: action.loading\n        }\n      };\n    case actionTypes.SET_LIST_ERROR:\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          error: action.error\n        }\n      };\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport * as reducers from \"./reducers\";\n\nexport default createStore(combineReducers(reducers), composeWithDevTools(applyMiddleware(thunk)));\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Provider } from \"react-redux\";\n\nimport WarehousesList from \"./components/WarehousesList\";\nimport ProductsList from \"./components/ProductsList\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Container>\n          <Row>\n            <Col className=\"full-height\" xs=\"12\" md=\"6\">\n              <WarehousesList />\n            </Col>\n            <Col className=\"full-height\" xs=\"12\" md=\"6\">\n              <ProductsList />\n            </Col>\n          </Row>\n        </Container>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}